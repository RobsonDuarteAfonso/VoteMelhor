// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VoteMelhor.Infra.Data;

namespace VoteMelhor.Infra.Migrations
{
    [DbContext(typeof(VoteMelhorContext))]
    [Migration("20200601054127_correcao 1")]
    partial class correcao1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VoteMelhor.Domain.Entities.LawSuit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<Guid>("PoliticalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("PublicationDate")
                        .HasColumnType("Datetime");

                    b.Property<string>("Situation")
                        .IsRequired()
                        .HasColumnType("varchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("Datetime");

                    b.HasKey("Id");

                    b.HasIndex("PoliticalId");

                    b.ToTable("LawSuit");
                });

            modelBuilder.Entity("VoteMelhor.Domain.Entities.Party", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Image")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(50);

                    b.Property<string>("Initials")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(10);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Party");
                });

            modelBuilder.Entity("VoteMelhor.Domain.Entities.Political", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CongressmanId")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(12);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("SenatorId")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("varchar(3)")
                        .HasMaxLength(3);

                    b.HasKey("Id");

                    b.ToTable("Political");
                });

            modelBuilder.Entity("VoteMelhor.Domain.Entities.PoliticalParty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Current")
                        .HasColumnType("int");

                    b.Property<Guid>("PartyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PoliticalId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PartyId");

                    b.HasIndex("PoliticalId");

                    b.ToTable("PoliticalParty");
                });

            modelBuilder.Entity("VoteMelhor.Domain.Entities.Position", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Current")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Participation")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20);

                    b.Property<Guid>("PoliticalId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PoliticalId");

                    b.ToTable("Position");
                });

            modelBuilder.Entity("VoteMelhor.Domain.Entities.Proposal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("House")
                        .IsRequired()
                        .HasColumnType("varchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("Numeration")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime>("ProposalDate")
                        .HasColumnType("Datetime");

                    b.Property<string>("ProposalType")
                        .IsRequired()
                        .HasColumnType("varchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("Proposal");
                });

            modelBuilder.Entity("VoteMelhor.Domain.Entities.Rating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PoliticalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Rate")
                        .IsRequired()
                        .HasColumnType("varchar(3)")
                        .HasMaxLength(3);

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PoliticalId");

                    b.HasIndex("UserId");

                    b.ToTable("Rating");
                });

            modelBuilder.Entity("VoteMelhor.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("varchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("varchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("UserStatus")
                        .IsRequired()
                        .HasColumnType("varchar(3)")
                        .HasMaxLength(3);

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("VoteMelhor.Domain.Entities.Voting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PoliticalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProposalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Vote")
                        .IsRequired()
                        .HasColumnType("varchar(3)")
                        .HasMaxLength(3);

                    b.Property<DateTime>("VotingDate")
                        .HasColumnType("Datetime");

                    b.HasKey("Id");

                    b.HasIndex("PoliticalId");

                    b.HasIndex("ProposalId");

                    b.ToTable("Voting");
                });

            modelBuilder.Entity("VoteMelhor.Domain.Entities.LawSuit", b =>
                {
                    b.HasOne("VoteMelhor.Domain.Entities.Political", "Political")
                        .WithMany("LawSuits")
                        .HasForeignKey("PoliticalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VoteMelhor.Domain.Entities.PoliticalParty", b =>
                {
                    b.HasOne("VoteMelhor.Domain.Entities.Party", "Party")
                        .WithMany("PoliticalPartys")
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VoteMelhor.Domain.Entities.Political", "Political")
                        .WithMany("PoliticalPartys")
                        .HasForeignKey("PoliticalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VoteMelhor.Domain.Entities.Position", b =>
                {
                    b.HasOne("VoteMelhor.Domain.Entities.Political", "Political")
                        .WithMany("Positions")
                        .HasForeignKey("PoliticalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VoteMelhor.Domain.Entities.Rating", b =>
                {
                    b.HasOne("VoteMelhor.Domain.Entities.Political", "Political")
                        .WithMany("Ratings")
                        .HasForeignKey("PoliticalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VoteMelhor.Domain.Entities.User", "User")
                        .WithMany("Ratings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VoteMelhor.Domain.Entities.User", b =>
                {
                    b.OwnsOne("VoteMelhor.Domain.ValueObjects.ConfirmationCode", "ConfirmationCode", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Code")
                                .HasColumnName("CodigoConfirmacao")
                                .HasColumnType("varchar(100)")
                                .HasMaxLength(100);

                            b1.Property<DateTime>("CodeExpirationDate")
                                .HasColumnName("DtExpiraCodigo")
                                .HasColumnType("DateTime");

                            b1.HasKey("UserId");

                            b1.ToTable("User");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.OwnsOne("VoteMelhor.Domain.ValueObjects.Password", "Password", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Code")
                                .IsRequired()
                                .HasColumnType("varchar(300)")
                                .HasMaxLength(20);

                            b1.HasKey("UserId");

                            b1.ToTable("User");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });
                });

            modelBuilder.Entity("VoteMelhor.Domain.Entities.Voting", b =>
                {
                    b.HasOne("VoteMelhor.Domain.Entities.Political", "Political")
                        .WithMany("Votings")
                        .HasForeignKey("PoliticalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VoteMelhor.Domain.Entities.Proposal", "Proposal")
                        .WithMany()
                        .HasForeignKey("ProposalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
